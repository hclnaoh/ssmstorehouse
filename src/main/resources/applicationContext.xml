<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


    <!--开启注解扫描,扫描业务逻辑层叠的注解-->
    <context:component-scan base-package="com.service"/>



    <!--加载一下db.properties-->
    <context:property-placeholder location="classpath:configuration.properties"/>

<!--    &lt;!&ndash;配置数据源组件&ndash;&gt;-->
<!--    &lt;!&ndash;创建数据库连接池&ndash;&gt;-->
<!--    &lt;!&ndash;这里我们采用第三方框架c3p0提供的类进行组件创建，也可以选择其他方式&ndash;&gt;-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="${jdbc.driverClassName}"/>-->
<!--        <property name="jdbcUrl" value="${jdbc.url}"/>-->
<!--        <property name="user" value="${jdbc.username}"/>-->
<!--        <property name="password" value="${jdbc.password}"/>-->
<!--    </bean>-->
<!--	-->

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />

        <property name="url" value="${jdbc.url}"/>

        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

   <!-- spring管理mybatis中的sqlSessionFactory -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <!--引用数据源-->
       <property name="dataSource" ref="dataSource"/>
       <!--配置mapper文件的扫描路径-->
       <property name="mapperLocations" value="classpath:mapper/*.xml"/>
       <!--设置别名,该包下所有的类都有别名，别名就是类名-->
       <property name="typeAliasesPackage" value="com.entity"/>
   </bean>
    <!-- dao接口所在的位置 -->
    <bean id="config" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.dao"></property>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

<!--    <bean id="txManager"-->
<!--          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"></property>-->
<!--    </bean>-->
<!--    &lt;!&ndash; 配置事务类 &ndash;&gt;-->
<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--    <property name="dataSource" ref="dataSource"></property>-->
<!--    </bean>-->
<!--    &lt;!&ndash; 配置事务的通用属性 &ndash;&gt;-->
<!--    <tx:advice id="txAdvice" transaction-manager="transactionManager">-->
<!--    <tx:attributes>-->
<!--    <tx:method name="add*" propagation="REQUIRED"/>-->
<!--    <tx:method name="update*" propagation="REQUIRED"/>-->
<!--    <tx:method name="delete*" propagation="REQUIRED"/>-->
<!--    <tx:method name="*" propagation="REQUIRED" read-only="true"></tx:method>-->
<!--    </tx:attributes>-->
<!--    </tx:advice>-->
<!--    &lt;!&ndash; 配置切点 &ndash;&gt;-->
<!--    <aop:config>-->
<!--    <aop:pointcut expression="execution(* com.service.impl.*.*(..))" id="mycut"/>-->
<!--    <aop:advisor advice-ref="txAdvice" pointcut-ref="mycut"/>-->
<!--    </aop:config>-->
    
  
 
   <!-- 支持上传文件 -->  
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/> 
    
    <!-- 自动扫描包中的注解，依赖注入 -->
    <context:component-scan base-package="com"/>
     <!-- 开启注解功能 -->
     <mvc:annotation-driven/>
</beans>